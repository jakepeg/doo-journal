// scripts/update-env.js
// DEPRECATED: Avoid using this script as it overwrites stable canister IDs
// Only use if you need to completely regenerate .env.local from scratch

import { execSync } from "child_process";
import fs from "fs";
import path from "path";

console.log("‚ö†Ô∏è  WARNING: This script will overwrite your .env.local file and canister IDs");
console.log("üí° TIP: Your canister IDs are stable and don't need updating");
console.log("üéØ Consider just manually adding missing environment variables instead");
console.log("");

// Prompt for confirmation (in a real scenario)
const envPath = path.resolve(process.cwd(), ".env.local");

// Check if .env.local already exists
if (fs.existsSync(envPath)) {
  console.log("üìÑ Current .env.local exists. Contents:");
  console.log(fs.readFileSync(envPath, 'utf8'));
  console.log("‚ö†Ô∏è  This will be completely overwritten!");
}

// Only proceed if explicitly requested
const shouldProceed = process.argv.includes('--force');
if (!shouldProceed) {
  console.log("‚ùå Aborted. Use --force flag if you really want to regenerate everything");
  console.log("üìù Recommendation: Manually add any missing variables to preserve canister IDs");
  process.exit(0);
}

// Run dfx canister id to get the current IDs
const backendId = execSync("dfx canister id journal_backend --network local").toString().trim();
const frontendId = execSync("dfx canister id journal_frontend --network local").toString().trim();

// Get the Internet Identity canister ID for local development
let iiId;
try {
  iiId = execSync("dfx canister id internet_identity --network local").toString().trim();
} catch (error) {
  console.warn("Warning: Could not get internet_identity canister ID, using placeholder");
  iiId = "rdmx6-jaaaa-aaaaa-aaadq-cai"; // Default placeholder
}

// Define clean VITE_* vars
const envContent = `# Auto-generated by update-env.js
VITE_DFX_VERSION=0.29.1
VITE_DFX_NETWORK=local
VITE_IC_HOST=http://127.0.0.1:4943
VITE_II_URL=http://${iiId}.localhost:4943/#authorize

# Local Canister IDs
VITE_CANISTER_ID_JOURNAL_BACKEND=${backendId}
VITE_CANISTER_ID_JOURNAL_FRONTEND=${frontendId}

# vetKD Configuration
VITE_VETKD_KEY_NAME=dfx_test_key
`;

fs.writeFileSync(envPath, envContent);

console.log("‚úÖ .env.local updated with VITE_ variables for local development");
